{"version":3,"sources":["actions/errorActions.js","actions/types.js","components/auth/Register.js","actions/authActions.js","reducers/articlesReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","repository/custom-axios.js","repository/axiosRepository.js","actions/articleActions.js","components/auth/Login.js","components/auth/Logout.js","components/header/Header2.js","components/article/Article.js","components/category/CategoryList.js","components/home/HomePage.js","components/comment/Comment.js","components/comment/CommentWrite.js","components/article/ArticleSinglePage.js","components/profile/MyArticles.js","components/article/EditArticle.js","components/article/WriteArticle.js","components/App.js","serviceWorker.js","index.js"],"names":["clearErrors","type","Register","state","modal","fullName","username","password","msg","toggle","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","newUser","length","Swal","fire","icon","title","showConfirmButton","timer","register","prevProps","this","error","isAuth","id","NavLink","className","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","Button","style","marginTop","block","Component","connect","isAuthenticated","auth","dispatch","body","JSON","stringify","axios","post","headers","then","res","payload","data","catch","err","InitialState","articles","content","singleArticle","initialState","token","localStorage","getItem","isLoading","user","initalState","status","combineReducers","action","reverse","authors","authorsReducer","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getState","instance","create","baseURL","articleService","fetchArticles","get","fetchArticle","login","incViews","getArticlesByAuthor","config","saveArticle","article","deleteArticle","delete","createArticle","postComment","comment","params","postId","authorId","getArticlesByCategory","category","getItems","repo","resp","getArticle","getItemsByAuthor","Login","Logout","logout","Header","AuthLinks","GuestLinks","Navbar","collapseOnSelect","expand","Container","Brand","to","Toggle","aria-controls","Collapse","Nav","Article","deleteThisArticle","bind","author","showCancelButton","confirmButtonText","cancelButtonText","result","window","location","reload","imageUrl","src","alt","substring","ownership","CategoryList","categoryHandle","HomePage","top","forEach","views","findTopViewed","map","key","Comment","CommentWrite","writeComment","parse","articleId","ArticleSinglePage","submitComment","match","comments","commentList","undefined","MyArticles","EditArticle","handleChange","saveEdit","document","getElementsByName","editArticle","stopPropagation","htmlFor","rows","obj","console","log","WriteArticle","submitArticle","createArticle2","onClose","history","push","App","loginWithStorage","path","exact","component","ProtectedRoute","rest","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7184e6b3.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n//return ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n}\r\n\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n}","export const GET_ARTICLES = \"GET_ARTICLES\";\r\nexport const GET_ARTICLE = \"GET_ARTICLE\";\r\nexport const GET_AUTHORS = \"GET_AUTHORS\";\r\nexport const DELETE_ARTICLE = \"DELETE_ARTICLE\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_ERROR\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const GET_ARTICLES_BY_AUTHOR = \"GET_ARTICLES_BY_AUTHOR\";\r\nexport const EDIT_ARTICLE = \"EDIT_ARTICLE\";\r\nexport const LOGIN_WITH_STORAGE = \"LOGIN_WITH_STORAGE\";\r\nexport const CREATE_ARTICLE = \"CREATE_ARTICLE\";\r\nexport const WRITE_COMMENT = \"WRITE_COMMENT\";\r\nexport const GET_ARTICLES_BY_CATEGORY = \"GET_ARTICLES_BY_CATEGORY\";","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    modal: false,\r\n    fullName: '',\r\n    username: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuth } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuth) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { fullName, username, password } = this.state;\r\n\r\n    const newUser = {\r\n      fullName,\r\n      username,\r\n      password\r\n    };\r\n\r\n    if (username.length < 5){\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Username should be greater than 5 characters\",   \r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      })\r\n    }\r\n\r\n    else if (password.length < 8){\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Password should contain more than 8 characters\",   \r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      })\r\n    }\r\n\r\n    else if (fullName.length < 2) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Full name should contain more than 2 characters\",   \r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      })\r\n    }\r\n\r\n    else {\r\n      this.props.register(newUser);\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink className=\"mr-2\" onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='fullName'\r\n                  id='fullName'\r\n                  placeholder='Full Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='username'>Username</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='username'\r\n                  id='username'\r\n                  placeholder='Username'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { register, clearErrors }\r\n)(Register);","import axios from 'axios';\r\nimport {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n} from './types';\r\n\r\n//CHECK TOKEN & LOAD USER\r\nexport const loadUser = () => (dispatch, getState ) => {\r\n    dispatch({ type: USER_LOADING });\r\n    const token = getState().auth.token;\r\n    const config = {\r\n        headers: {\r\n            'Authorization': null\r\n        }\r\n    }\r\n\r\n    if (token){\r\n        config.headers['Authorization'] = token;\r\n    }\r\n    \r\n    axios.post('http://localhost:8080/api/authors', config)\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        })\r\n            \r\n            \r\n}\r\n\r\nexport const register = ({fullName, username, password}) => dispatch => {\r\n    const body = JSON.stringify({ fullName, username, password});\r\n    const config =  { headers: {\r\n        'Content-Type': 'application/json'  \r\n    }}\r\n\r\n    axios.post(\"http://localhost:8080/api/authors\", body, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        \r\n        }).catch(err => {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            })\r\n        })\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\nexport const login = ({username, password}) => (dispatch, getState) => {\r\n    const body = JSON.stringify({ username, password});\r\n\r\n    const token = getState().auth.token;\r\n    const config = {\r\n        headers: {\r\n            'Authorization': null,\r\n            'Content-Type': 'application/json'  \r\n        }\r\n    }\r\n\r\n    if (token){\r\n        config.headers['Authorization'] = token;\r\n    }\r\n\r\n    axios.post(\"http://localhost:8080/api/auth\", body, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        \r\n        }).catch(err => {\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            })\r\n        })\r\n}\r\n\r\nexport const loginWithStorage = (user) => {\r\n    return {\r\n        type: 'LOGIN_WITH_STORAGE',\r\n        payload: user\r\n    }\r\n}","import { WRITE_COMMENT, GET_ARTICLES, GET_ARTICLE, GET_ARTICLES_BY_AUTHOR, EDIT_ARTICLE, DELETE_ARTICLE, GET_ARTICLES_BY_CATEGORY } from \"../actions/types\";\r\n\r\nconst InitialState = {\r\n  articles: [{id: 1, title: \"initial\", content: \"initial\"}],\r\n  singleArticle: {}\r\n};\r\n\r\n\r\nexport default function(state = InitialState, action) {\r\n  switch (action.type) {  \r\n    case GET_ARTICLES:\r\n      return {\r\n        ...state,\r\n        articles: action.payload.reverse()\r\n      }\r\n    case GET_ARTICLE:\r\n      return {\r\n        ...state,\r\n        singleArticle: action.payload\r\n      }\r\n    case GET_ARTICLES_BY_AUTHOR:\r\n      return {\r\n        ...state,\r\n        articles: action.payload.reverse()\r\n      }\r\n    case EDIT_ARTICLE:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case DELETE_ARTICLE:\r\n      return {\r\n        ...state\r\n      }\r\n    case WRITE_COMMENT:\r\n      return {\r\n        ...state,\r\n        singleArticle: action.payload \r\n      }\r\n    case GET_ARTICLES_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        articles: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_WITH_STORAGE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuth: false,\r\n    isLoading: false,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        \r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload));\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                isLoading: false,\r\n                token: action.payload.token,\r\n                user: action.payload\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"user\");\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuth: false,\r\n                isLoading: false\r\n            }\r\n        case LOGIN_WITH_STORAGE:\r\n            return {\r\n                isAuth: true,\r\n                token: action.payload.token,\r\n                isLoading: false,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initalState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initalState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                state: null,\r\n                id: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport  articelsReducer  from \"./articlesReducer\";\r\nimport  authorsReducer  from \"./authorsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  articles: articelsReducer,\r\n  authors: authorsReducer,\r\n  auth: authReducer,\r\n  error: errorReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\r\n   applyMiddleware(...middleware)\r\n));\r\n\r\n\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store';\r\n\r\nconst token = store.getState().auth.token;\r\nconst headers =  {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json'\r\n}\r\n\r\nif (token) {\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers\r\n});\r\n\r\nexport default instance;\r\n","import axios from './custom-axios'\r\n// import qs from 'qs'\r\n\r\nconst articleService = {\r\n    fetchArticles: ()=> {\r\n        return axios.get(\"/api/articles\");\r\n    },\r\n\r\n    fetchArticle: (id)=> {\r\n        return axios.get(`/api/articles/${id}`);\r\n    },\r\n\r\n    login: (user) => {\r\n        return axios.post(`/api/auth`, user);\r\n    },\r\n\r\n    incViews: (id) => {\r\n        axios.post(`/api/incViews/${id}`);\r\n    },\r\n\r\n    getArticlesByAuthor: (id) => {\r\n        const token = localStorage.getItem(\"token\");\r\n        \r\n        if (token){\r\n            const config = {\r\n                headers: {\r\n                    'Authorization':`Bearer ${token}`\r\n                }\r\n            }\r\n            return axios.get(`/api/articlesByAuthor/${id}`, config);\r\n        }\r\n        return axios.get(`/api/articlesByAuthor/${id}`);\r\n    },\r\n\r\n    saveArticle: (id, article) => {\r\n        return axios.post(`/api/save/${id}`, article);\r\n    },\r\n\r\n    deleteArticle: (id) => {\r\n        return axios.delete(`/api/articles/${id}`);\r\n    },\r\n\r\n    createArticle: (article) => {\r\n        return axios.post(`/api/articles`, article);\r\n    },\r\n\r\n    postComment: (comment) => {\r\n        var config = {\r\n            params: {\r\n                postId: comment.postId,\r\n                authorId: comment.authorId,\r\n                content: comment.content\r\n            }\r\n        }\r\n        return axios.post(`/api/comment`, comment, config);\r\n    },\r\n\r\n    getArticlesByCategory: (category) => {\r\n        return axios.get(`/api/category/${category}`);\r\n    }\r\n}\r\n\r\nexport default articleService;\r\n","import {\r\n  GET_ARTICLES,\r\n  GET_ARTICLE,\r\n  CREATE_ARTICLE,\r\n  GET_ARTICLES_BY_AUTHOR,\r\n  GET_ARTICLES_BY_CATEGORY,\r\n  EDIT_ARTICLE,\r\n  DELETE_ARTICLE,\r\n  WRITE_COMMENT\r\n} from \"./types\";\r\nimport repo from \"../repository/axiosRepository\";\r\nimport axios from 'axios';\r\n\r\nexport const getItems = () => {\r\n  return function(dispatch) {\r\n    return repo.fetchArticles().then(resp => {\r\n      dispatch({\r\n        type: GET_ARTICLES,\r\n        payload: resp.data\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getArticle = id => {\r\n  return function(dispatch) {\r\n    return repo.fetchArticle(id).then(resp => {\r\n      dispatch({\r\n        type: GET_ARTICLE,\r\n        payload: resp.data\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getItemsByAuthor = id => {\r\n  return function(dispatch) {\r\n    return repo.getArticlesByAuthor(id).then(resp => {\r\n      dispatch({\r\n        type: GET_ARTICLES_BY_AUTHOR,\r\n        payload: resp.data\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const editArticle = (id, obj) => {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: EDIT_ARTICLE,\r\n      payload: obj\r\n    });\r\n  };\r\n};\r\n\r\nexport const saveEdit = (id, article) => {\r\n  repo.saveArticle(id, article).then(resp => {\r\n    \r\n  }).catch(err => console.log(err, \"err\"));\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: EDIT_ARTICLE,\r\n      payload: article\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteArticle = (id) => {\r\n  return function(dispatch) {\r\n    repo.deleteArticle(id).then(\r\n      resp => {\r\n        dispatch({\r\n          type: DELETE_ARTICLE\r\n        })\r\n       getItems();\r\n      }\r\n    );\r\n    \r\n  };\r\n};\r\n\r\n//CREATE_ARTICLE\r\nexport const createArticle = (article) => {\r\n  return function(dispatch) {\r\n    console.log(article);\r\n    repo.createArticle(article).then(\r\n      resp => {\r\n        dispatch({\r\n          type: CREATE_ARTICLE,\r\n          payload: resp.data\r\n        })\r\n      }\r\n    );\r\n    \r\n  };\r\n};\r\n\r\n//CREATE ARTICLE 2\r\nexport const createArticle2 = (article) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n        'Authorization': localStorage.getItem(\"token\"),\r\n        'Content-Type': 'application/json'  \r\n    }\r\n  }\r\n\r\n  return axios.post(`http://localhost:8080/api/articles`, article, config);\r\n}\r\n\r\n\r\nexport const writeComment = (article) => {\r\n  return function(dispatch) {\r\n    repo.postComment(article).then(\r\n      resp => {\r\n        dispatch({\r\n          type: WRITE_COMMENT,\r\n          payload: resp.data\r\n        })\r\n      }\r\n    );\r\n    \r\n  };\r\n};\r\n\r\nexport const getArticlesByCategory = (category) => {\r\n  return function(dispatch) {\r\n    repo.getArticlesByCategory(category).then(\r\n      resp => {\r\n        dispatch({\r\n          type: GET_ARTICLES_BY_CATEGORY,\r\n          payload: resp.data\r\n        })\r\n      }\r\n    );\r\n    \r\n  };\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\nimport { getItems } from '../../actions/articleActions';\r\nclass Login extends Component {\r\n  state = {\r\n    modal: false,\r\n    username: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuth } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuth) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { username, password } = this.state;\r\n\r\n    const newUser = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.login(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='username'>Username</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='username'\r\n                  id='username'\r\n                  placeholder='Username'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login, clearErrors, getItems }\r\n)(Login);","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nclass Logout extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <NavLink onClick={this.props.logout} href=\"#\">\r\n                    Logout\r\n                </NavLink>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {logout})(Logout);","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport Logout from \"../auth/Logout\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nclass Header extends Component {\r\n  render() {\r\n    const { isAuth, user } = this.props.auth;\r\n\r\n    const AuthLinks = (\r\n      <Fragment>\r\n        <strong className=\"nav-link mr-2\">\r\n          {user && `Welcome ${user.fullName}`}\r\n        </strong>\r\n        <Logout />\r\n      </Fragment>\r\n    );\r\n\r\n    const GuestLinks = (\r\n      <Fragment>\r\n        <Register />\r\n        <Login />\r\n      </Fragment>\r\n    );\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand>\r\n            <Link to=\"/\">MODEUM</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {isAuth && (\r\n                <Fragment>\r\n                  <Link\r\n                    to={`/profile/${user.id}/articles`}\r\n                    className=\"nav-link\"\r\n                  >\r\n                    My Articles\r\n                  </Link>\r\n                  <Link to=\"/writeArticle\" className=\"nav-link\">\r\n                    Write Article\r\n                  </Link>\r\n                </Fragment>\r\n              )}\r\n            </Nav>\r\n            <Nav>\r\n              <div className=\"ml-auto d-flex\">\r\n                {isAuth ? AuthLinks : GuestLinks}\r\n              </div>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getItemsByAuthor,\r\n  deleteArticle,\r\n  getItems,\r\n} from \"../../actions/articleActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass Article extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteThisArticle = this.deleteThisArticle.bind(this);\r\n  }\r\n\r\n  deleteThisArticle(id, author) {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Article is about to be deleten\",\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Delete\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.props.deleteArticle(id);\r\n        this.props.getItemsByAuthor(author.id);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    let { title, content, author, imageUrl, id } = this.props.article;\r\n    return (\r\n      <div className=\"singleArticle mb-5\">\r\n        {this.props.article && (\r\n          <Fragment>\r\n            <img\r\n              className=\"img-rounded\"\r\n              src={imageUrl != null ? imageUrl : \"/logo192.png\"}\r\n              alt=\"post thumbnail\"\r\n            />\r\n            <div>\r\n              <Link to={`/articles/${id}`}>\r\n                <h2>{title}</h2>\r\n                <p>\r\n                  {content.substring(0, 150)}\r\n                  {content.length > 150 && \"...\"}\r\n                </p>\r\n              </Link>\r\n              {this.props.ownership && (\r\n                <Fragment>\r\n                  <Link to={`/edit/${id}`}>\r\n                    <button className=\"btn btn-primary mr-2\">Edit</button>\r\n                  </Link>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.deleteThisArticle(id, author);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n              {!this.props.ownership && (\r\n                <p className=\"singleArticleAuthorName\">\r\n                  Author: {author != null ? author.fullName : \"Unknown\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  articles: state.articles,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getItems,\r\n  getItemsByAuthor,\r\n  deleteArticle,\r\n})(Article);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getArticlesByCategory } from \"../../actions/articleActions\";\r\n\r\nclass CategoryList extends Component {\r\n    categoryHandle = (e) => {\r\n        this.props.getArticlesByCategory(e.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"categoryList\">\r\n                <h2 className=\"my-3\">Categories</h2>\r\n\r\n                <button className=\"btn btn-dark mt-1 mr-1\" value=\"UX\" onClick={this.categoryHandle}>User Experience</button>\r\n                <button className=\"btn btn-dark mt-1\" value=\"UI\" onClick={this.categoryHandle}>UI Design</button>\r\n                <button className=\"btn btn-dark mt-1 mr-1\" value=\"WD\" onClick={this.categoryHandle}>Web Design</button>\r\n                <button className=\"btn btn-dark mt-1\" value=\"WB\" onClick={this.categoryHandle}>Web Dev</button>\r\n                <button className=\"btn btn-dark mt-1 mr-1\" value=\"INT\" onClick={this.categoryHandle}>Interview</button>\r\n                <button className=\"btn btn-dark mt-1\" value=\"TAT\" onClick={this.categoryHandle}>Tutorials</button>\r\n                <button className=\"btn btn-dark mt-1 mr-1\" value=\"INSP\" onClick={this.categoryHandle}>Inspiration</button>\r\n                <button className=\"btn btn-dark mt-1 \" value=\"CA\" onClick={this.categoryHandle}>Career Advice</button>\r\n                <button className=\"btn btn-dark mt-1\" value=\"JS\" onClick={this.categoryHandle}>Javascript</button>\r\n                <button className=\"btn btn-dark mt-1\" value=\"PROG\" onClick={this.categoryHandle}>General Programming</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {getArticlesByCategory})(CategoryList);","import React, { Component } from \"react\";\r\nimport Article from \"../article/Article\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getItems } from \"../../actions/articleActions\";\r\nimport CategoryList from \"../category/CategoryList\";\r\n\r\nclass HomePage extends Component {\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n\r\n  findTopViewed() {\r\n    let articles = this.props.articles.articles;\r\n    let top = articles[0];\r\n    articles.forEach((article) => {\r\n      if (article.views > top.views) {\r\n        top = article;\r\n      }\r\n    });\r\n\r\n    return top;\r\n  }\r\n\r\n  render() {\r\n    let { articles } = this.props.articles;\r\n    let top = this.findTopViewed();\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 mt-3\">\r\n            {articles &&\r\n              articles.map((article) => (\r\n                <Article key={article.id} article={article} />\r\n              ))}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <h2 className=\"my-3\">Top article</h2>\r\n            {top && (\r\n              <Link to={`/articles/${top.id}`}>\r\n                <div className=\"topviewed\">\r\n                  <img src={top.imageUrl} alt=\"top viewed article\" />\r\n                  <p className=\"topviewedTitle mt-3 text-bold\">{top.title}</p>\r\n                </div>\r\n              </Link>\r\n            )}\r\n\r\n            <CategoryList/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  articles: state.articles,\r\n});\r\nexport default connect(mapStateToProps, { getItems })(HomePage);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Comment extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-md-1\">\r\n                    <img className=\"commentImg\" src={this.props.author.imageUrl}></img>\r\n                </div>\r\n                <div className=\"col-md-11\">\r\n                    <p className=\"commentAuthor\">{this.props.author.fullName}</p>\r\n                    <p className=\"commentContent\">{this.props.content}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport store from '../../store';\r\nimport { connect } from 'react-redux';\r\nimport { writeComment, getArticle } from \"../../actions/articleActions\";\r\n\r\n\r\nclass CommentWrite extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n        \r\n        if (user !== null){\r\n            this.state = {\r\n                authorId: user.id,\r\n                postId: this.props.id,\r\n                content: \"\"\r\n            }\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        let { authorId, postId, content } = this.state;\r\n        const data = {\r\n            authorId,\r\n            postId,\r\n            content\r\n        }\r\n\r\n        if (content !== \"\"){\r\n            this.props.writeComment(data);\r\n            this.setState({\r\n                content: \"\"\r\n            });\r\n            \r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Comment sent successfully\",   \r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                // onClose: () => {\r\n                //     window.location.reload()\r\n                // }\r\n              })\r\n        } else {\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"You can not leave an empty comment!\",   \r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let auth = store.getState().auth.isAuth;\r\n        return ( \r\n            <Fragment>\r\n                { auth && (\r\n                    <div className=\"commentWrite\">\r\n                    <form>\r\n                        <textarea type=\"text\" onChange={this.onChange} name=\"content\" value={this.state.content} placeholder=\"Comment...\" className=\"form-control mb-2 commentInput\"/>\r\n                        <input type=\"hidden\" name=\"articleId\" value={this.state.articleId}></input>\r\n                        <input type=\"hidden\" name=\"authorId\" value={this.state.authorId}></input>\r\n                        <button onClick={this.onSubmit} type=\"button\" className=\"commentButton btn btn-primary\">Write comment</button>\r\n                    </form>\r\n                </div>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {writeComment, getArticle})(CommentWrite);","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getArticle } from '../../actions/articleActions';\r\nimport repo from '../../repository/axiosRepository';\r\nimport Comment from \"../comment/Comment\";\r\nimport CommentWrite from '../comment/CommentWrite';\r\n\r\n\r\nclass ArticleSinglePage extends Component {\r\n    componentDidMount(){\r\n        this.id = this.props.match.params.id;\r\n        this.props.getArticle(this.id);\r\n        repo.incViews(this.id);\r\n    }\r\n    \r\n    submitComment = (data) => {\r\n        repo.postComment(data);\r\n        this.props.getArticle(this.id);\r\n    }\r\n\r\n    render() {\r\n        let { singleArticle : article } = this.props;\r\n        let comments = article.commentList;\r\n        return (\r\n            <Fragment>\r\n                {\r\n                (article !== undefined && article.author !== undefined) && \r\n                    <div className=\"container articleContainer\">\r\n                        <h1 className=\"singleArticleTitle\">{article.title}</h1>\r\n                        \r\n                        <img src={article.imageUrl} className=\"singlePageThumbnail\" alt=\"article main thumb\"/>\r\n                        \r\n                        <div className=\"authorDetails\">\r\n                            <img src={article.author.imageUrl ? article.author.imageUrl : '/account.png'} className=\"singleArticleUserImg\" alt=\"user profile\"/>\r\n                            <div>\r\n                            <p>{article.author.fullName}</p>\r\n                            <div className=\"stats\">\r\n                                <img className=\"singleArticleViewsIcon\" src=\"/views.png\" alt=\"\"/> {article.views} views\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p className=\"singleArticleParagraph\">{article.content}</p>\r\n\r\n                        <div className=\"comments\">\r\n                            <h3>Comments:   </h3>\r\n                            {\r\n                                comments.map((comment) => (\r\n                                    <Comment key={comment.id} content={comment.content} author={comment.author}/>\r\n                                ))\r\n                            }\r\n                        <CommentWrite submitComment={this.submitComment} id={article.id} />\r\n                        </div>\r\n                    </div>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    singleArticle: state.articles.singleArticle\r\n})\r\n\r\nexport default connect(mapStateToProps, {getArticle})(ArticleSinglePage);","import React, { Component } from 'react'\r\nimport { getItemsByAuthor, deleteArticle, getItems } from '../../actions/articleActions';\r\n\r\nimport { connect } from 'react-redux'\r\nimport Article from '../article/Article';\r\n\r\nclass MyArticles extends Component {\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id;\r\n        this.props.getItemsByAuthor(id);\r\n    }\r\n\r\n\r\n    render() {\r\n        let { articles } = this.props.articles;\r\n        return (\r\n            <div className=\"container\">\r\n               {articles && articles.map(article => <Article key={article.id} article={article} ownership={true} deleteArticle={this.props.deleteArticle}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    articles: state.articles\r\n  })\r\nexport default connect(mapStateToProps, {getItems, getItemsByAuthor, deleteArticle})(MyArticles)\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getArticle,\r\n  editArticle,\r\n  saveEdit,\r\n} from \"../../actions/articleActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass EditArticle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.saveEdit = this.saveEdit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    this.props.getArticle(id);\r\n  }\r\n\r\n  handleChange(e) {\r\n    let id = this.props.match.params.id;\r\n    let title = document.getElementsByName(\"title\")[0].value;\r\n    let content = document.getElementsByName(\"content\")[0].value;\r\n    let category = document.getElementsByName(\"category\")[0].value;\r\n\r\n    this.props.editArticle(id, {\r\n      singleArticle: {\r\n        title,\r\n        content,\r\n        category\r\n      },\r\n    });\r\n  }\r\n\r\n  saveEdit(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let id = this.props.match.params.id;\r\n    this.props.saveEdit(id, JSON.stringify(this.props.singleArticle));\r\n\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Your article has been saved\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container editForm\">\r\n        {this.props.singleArticle && (\r\n          <Fragment>\r\n            <form>\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                onChange={this.handleChange}\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                value={this.props.singleArticle.title}\r\n              />\r\n\r\n              <label htmlFor=\"content\">Content:</label>\r\n              <textarea\r\n                onChange={this.handleChange}\r\n                rows={5}\r\n                name=\"content\"\r\n                type=\"textarea\"\r\n                className=\"form-control\"\r\n                value={this.props.singleArticle.content}\r\n              />\r\n\r\n              <label for=\"category\">Choose a category:</label>\r\n\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n              >\r\n                <option value=\"PROG\">Programming General</option>\r\n                <option value=\"UX\">User Experience</option>\r\n                <option value=\"WB\">Web Development</option>\r\n                <option value=\"WD\">Web Design</option>\r\n                <option value=\"INT\">Interview</option>\r\n                <option value=\"CA\">Career Advice</option>\r\n                <option value=\"INSP\">Inspiration</option>\r\n                <option value=\"JS\">Javasript</option>\r\n              </select>\r\n              <br></br>\r\n              <button className=\"btn btn-primary mt-3\" onClick={this.saveEdit}>\r\n                Save\r\n              </button>\r\n            </form>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  singleArticle: state.articles.singleArticle,\r\n});\r\nexport default connect(mapStateToProps, { getArticle, editArticle, saveEdit })(\r\n  EditArticle\r\n);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createArticle2 } from '../../actions/articleActions';\r\nimport Swal from \"sweetalert2\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass WriteArticle extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        imageUrl: '',\r\n        category: '',\r\n        id: '',\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    submitArticle = () => {\r\n        const { title, content, category, imageUrl } = this.state;\r\n        const article = {\r\n            title,\r\n            content,\r\n            imageUrl,\r\n            category,\r\n            id: this.props.user.id,\r\n            category: \"UX\",\r\n        }\r\n\r\n        if (title === \"\" || content === \"\" || imageUrl === \"\"){\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Some fields are empty, check again',\r\n                showConfirmButton: false,\r\n                timer: 2000\r\n            })\r\n\r\n        }\r\n\r\n        else if (article.id !== \"\"){\r\n            this.props.createArticle2(article);\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Your article has been created',\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n                onClose: () => {\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            })\r\n        }\r\n    \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    <input onChange={this.onChange} type=\"text\" className=\"form-control mb-3\" name=\"title\" placeholder=\"Title\" value={this.state.title}></input>\r\n                \r\n                    <label htmlFor=\"content\">Content:</label>\r\n                    <textarea onChange={this.onChange} className=\"form-control mb-3\" name=\"content\" placeholder=\"Content\" rows=\"5\" value={this.state.content}></textarea>\r\n                \r\n                    <label htmlFor=\"imageUrl\">Thumbnail link:</label>\r\n                    <input onChange={this.onChange} type=\"text\" className=\"form-control mb-3\" name=\"imageUrl\" placeholder=\"URL Image\" value={this.state.imageUrl}></input>\r\n\r\n                    <label htmlFor=\"category\">Choose a category:</label>\r\n\r\n                    <select id=\"category\" name=\"category\" className=\"form-control\" onChange={this.onChange}>\r\n                        <option value=\"PROG\">Programming General</option>\r\n                        <option value=\"UX\">User Experience</option>\r\n                        <option value=\"WB\">Web Development</option>\r\n                        <option value=\"WD\">Web Design</option>\r\n                        <option value=\"INT\">Interview</option>\r\n                        <option value=\"CA\">Career Advice</option>\r\n                        <option value=\"INSP\">Inspiration</option>\r\n                        <option value=\"JS\">Javasript</option>\r\n                    </select>        \r\n                    <br></br>\r\n                    <input type=\"hidden\" value={this.props.user !== null && this.props.user.id} name=\"id\"></input>\r\n                    <input type=\"hidden\" value=\"\" name=\"category\"></input>\r\n\r\n                    <button type=\"button\" onClick={this.submitArticle} className=\"btn btn-primary\">Submit article</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n  });\r\n\r\nexport default connect(mapStateToProps, {createArticle2})(WriteArticle);","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./header/Header2\";\nimport HomePage from \"./home/HomePage\";\nimport ArticleSinglePage from \"./article/ArticleSinglePage\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginWithStorage } from \"../actions/authActions\";\nimport MyArticles from \"./profile/MyArticles\";\n// import ErrorAlert from './info/ErrorAlert';\nimport { connect } from \"react-redux\";\nimport EditArticle from \"./article/EditArticle\";\nimport WriteArticle from \"./article/WriteArticle\";\nimport store from '../store';\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.getItem(\"user\") !== null) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      this.props.loginWithStorage(user);\n    }\n  }\n\n  render() {\n    let auth = store.getState().auth.isAuth;\n    return (\n      <Fragment>\n        <Header />\n        <Route path=\"/\" exact={true} component={HomePage} />\n        <Route path=\"/articles/:id\" component={ArticleSinglePage} />\n        <ProtectedRoute auth={auth} path=\"/profile/:id/articles\" component={MyArticles} />\n        <ProtectedRoute auth={auth} path=\"/edit/:id/\" component={EditArticle} />\n        <ProtectedRoute auth={auth} path=\"/writeArticle\" component={WriteArticle} />\n      </Fragment>\n    );\n  }\n}\n\nconst ProtectedRoute = ({auth, component:Component, ...rest}) => {\n  return (\n    <Route {...rest}\n    render = { props => auth ? (<Component {...props}/>) : <Redirect to=\"/\"/>} />\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { loginWithStorage })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from \"./store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<BrowserRouter><Provider store={store}><App /></Provider></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}